name: Deploy APIM Public API

on:
  push:
    branches:
      - main  # Runs when code is pushed to the main branch
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev/prod)"
        required: true
        default: "dev"

jobs:
  deploy-apim:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set Environment Variables
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_ENV
          echo "SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_SUBSCRIPTION_ID }}')" >> $GITHUB_ENV
          echo "AZURE_RESOURCE_GROUP =$(echo '${{ secrets.AZURE_RESOURCE_GROUP }}')" >> $GITHUB_ENV
          echo "Using environment: $ENVIRONMENT"
          echo "Using subscription: $SUBSCRIPTION_ID"
          echo "Using resourceGroup: $AZURE_RESOURCE_GROUP"
          echo "AZURE_RESOURCE_GROUP gitops: ${{ secrets.AZURE_RESOURCE_GROUP }}"

      - name: Debug Variables
        run: |
          echo "ENVIRONMENT: $ENVIRONMENT"
          echo "SUBSCRIPTION_ID: $SUBSCRIPTION_ID"
          echo "AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP"


      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login to Azure
        run: |
          az login --service-principal             -u ${{ secrets.AZURE_CLIENT_ID }}             -p ${{ secrets.AZURE_CLIENT_SECRET }}             --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Initialize Terraform
        run: |
          cd environments/${{ env.ENVIRONMENT }}
          terraform init
      
      - name: Import Existing Resource
        run: |
          cd environments/${{ env.ENVIRONMENT }}
          terraform import azurerm_resource_group.rg "/subscriptions/${{ env.SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZURE_RESOURCE_GROUP }} " || echo "Resource already imported"


      - name: Plan Terraform
        run: |
          cd environments/${{ env.ENVIRONMENT }}
          terraform plan -out=tfplan -var="subscription_id=${{  env.SUBSCRIPTION_ID }}" -var="environment=${{ env.ENVIRONMENT }}" -var="azurerm_resource_group=${{ env.AZURE_RESOURCE_GROUP }}"
          

      - name: Apply Terraform (Manual Approval Required)
        run: |
          cd environments/${{ env.ENVIRONMENT }}
          terraform apply -auto-approve -var="subscription_id=${{  env.SUBSCRIPTION_ID }}" -var="environment=${{ env.ENVIRONMENT }}" -var="azurerm_resource_group=${{ env.AZURE_RESOURCE_GROUP }}"

      - name: Deploy API to APIM
        run: |
          az apim api import --resource-group my-rg             --service-name my-apim             --path sample-api             --specification-url $(cat apis/api1/definitions/openapi.yaml)



